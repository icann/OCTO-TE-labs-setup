# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Created by Nicolas Antoniello @ICANN
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# ------------------------------------------------------------------------------------------------------------------
# --------------------------------- DEPLOY CONFIGURATION SET UP (Edit this lines)-----------------------------------

### Setting global variables and values

# Set the "domain name" you're using for the cloud Lab
DOMAIN="%LABDOMAIN%"

# Indicate "public IP addresses" of the main cloud server instance
IPv4ServerAddr="%IPV4ADDRESS%"
IPv6ServerAddr="%IPV6ADDRESS%"

# AWS zoneid for DOMAIN
ZONEID="%ZONEID%"

# LABTYPE 1,2,3
LABTYPE="%LABTYPE%"

# Networks to install
NETWORKS="%NETWORKS%"

# ------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------

### Set VPN parameters for creating VPN link with ISP @iborder-rtr router (only if you're creating a border router)

# Set this to YES if you want to config a VPN [default: NO]
config_iborder_rtr_VPN="NO"

## VPN parameters (mandatory if you set the previous one to YES)
# Name for the VPN peer 
VPNpeerName=""
# Port where your side of the VPN will listen to
VPNlistenPort=""
# Set the private Key you generated and shared with the ISP 
VPNprivateKey=""
# Set private IP addres and Mask for local VPN interface termination
VPNlocalIPv4=""
# Set the public Key provided by your ISP
VPNpublicKey=""
# set private IP prefix that's going to be allowed (the single IP address of ISP side of the VPN)
VPNallowedPrefixIPv4=""
# Set public IP address and port of VPN endpoint (the ISP side of the VPN)
VPNendPointIPv4=""

# ------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------

### Set the DNS server software that will be pre-installed in each of the group servers
### (be carefull to match the EXACT name of the option)
###
### Options are:
###     For Bind9 use:              "bindX"
###     For Unbound use:            "unboundX"
###     For Nsd use:                "nsdX"
###     For OpenDNSSEC+Bind9 use:   "odsX"
###
# Select the "DNS server software" you want to pre-install for resolv1 server [default: bindX]
server4resolv1="bindX"
# Select the package you want to pre-install for resolv2 server [defult: unboundX]
server4resolv2="unboundX"
# Select the package you want to pre-install for soa server [defult: bindX]
server4soa="bindX"
# Select the package you want to pre-install for ns1 server [defult: bindX]
server4ns1="bindX"
# Select the package you want to pre-install for ns2 server [defult: nsdX]
server4ns2="nsdX"

### Set the RPKI validator software that will be pre-installed in each of the group RPKI validator
### (be carefull to match the EXACT name of the option)
###
### Options are:
###     For Fort use:              "RPKIfortX"
# Select the "RPKI validator software" you want to pre-install as each group RPKI validator [defult: RPKIfortX]
server4RPKIvalidator="RPKIfortX"
# Select the "RPKI validator software" you want to install as rpki1 global RPKI validator [defult: RPKIfortX]
serverGlobalRPKIvalidator1="RPKIfortX"
# Select the "RPKI validator software" you want to install as rpki2 global RPKI validator [defult: RPKIfortX]
serverGlobalRPKIvalidator2="RPKIfortX"

# ------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------

### Indicate wether you want some containers to be created or not
# Indicate if you want -client- container created in each group [default: YES]
generateClients=YES
# Indicate if you want -server- containers created in each group (resolv1, resolv2, SOA, ns1 & ns2) [default: YES]
generateServers=YES

# Indicate if you want -RPKI validator- containers created in each group [default: NO]
generateRPKIvalidator=NO
# Indicate if you want -RPKI validator- global containers created (normally is this OR previous one) [default: NO]
generateGlobalRPKIvalidator=NO

# Indicate if you want border router (iborder-rtr) to be created [default: NO]
generateBorderRouter=NO

# Indicate if you want groups to be able to access their router (grpX-rtr) by clicking on the router icon [default: NO]
allowRouterAccess4Groups=NO

# IPv6 ULA prefix, selected at time of lab setup
IPv6prefix="%IPv6pfx%"
