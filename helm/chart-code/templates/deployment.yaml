apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "java.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "java.name" . }}
    chart: {{ template "java.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  revisionHistoryLimit: 2
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "java.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "java.name" . }}
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      serviceAccountName: {{ .Values.scc.serviceAccountName }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.images.main.tag }}
          image: "{{ .Values.images.main.registry }}{{ .Values.images.main.name }}:{{ .Values.images.main.tag }}"
          {{- else }}
          image: "{{ .Values.images.main.registry }}{{ .Values.images.main.name }}"
          {{- end }}
          imagePullPolicy: Always
        {{- if .Values.env_var }}
          env:
{{ toYaml .Values.env_var | indent 12 }}
        {{- end }}
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - mountPath: /opt/logs
              name: splunklogs
      volumes:
        - hostPath:
            path: {{ .Values.logs.log_path }}
          name: splunklogs
    {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
